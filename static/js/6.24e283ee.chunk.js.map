{"version":3,"sources":["components/common/FormControls/FormControls.module.scss","utils/validators/validators.js","components/common/FormControls/FormControls.js","components/Dialogs/Dialogs.module.scss","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","required","value","maxLengthCreator","max","length","FormControl","meta","touched","error","children","hasError","className","styles","formControl","Input","props","input","restProps","Textarea","createField","placeholder","name","validators","component","text","validate","DialogItem","id","key","dialog","active","to","Message","message","maxLength5","AddMessageFormRedux","reduxForm","form","touchOnChange","touchOnBlur","onSubmit","handleSubmit","Field","Dialogs","dialogsPage","sendMessage","isAuth","dialogElements","dialogs","map","el","messageElements","messages","dialogsItems","newMessageBody","mapStateToPropsRedirect","state","auth","compose","connect","dispatch","sendMessageCreator","Wrapper","RedirectComponent","this","Component"],"mappings":"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","file":"static/js/6.24e283ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2MXBz\",\"error\":\"FormControls_error__3JOjQ\",\"errorMessage\":\"FormControls_errorMessage__f1ltz\"};","export const required = (value) => {\r\n\tif( value ) {\r\n\t\treturn undefined;\r\n\t}\r\n\treturn 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = (max) => (value) => {\r\n\tif( value.length > max) {\r\n\t\treturn `Max length ${max} symbols`;\r\n\t}\r\n\treturn undefined;\r\n};\r\n","import React from \"react\";\r\nimport styles from './FormControls.module.scss';\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({meta: {touched, error}, children}) => {\r\n\tconst hasError = touched && error;\r\n\treturn (\r\n\t\t<div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n\t\t\t{children}\r\n\t\t\t{\r\n\t\t\t\thasError && (<span>{error}</span>)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport const Input = (props) => {\r\n\tconst {input, meta, ...restProps} = props;\r\n\treturn (\r\n\t\t<FormControl {...props} >\r\n\t\t\t<input {...input} {...restProps}/>\r\n\t\t</FormControl>\r\n\t)\r\n};\r\nexport const Textarea = (props) => {\r\n\tconst {input, meta, ...restProps} = props;\r\n\treturn (\r\n\t\t<FormControl {...props} >\r\n\t\t\t<textarea {...input} {...restProps}/>\r\n\t\t</FormControl>\r\n\t)\r\n};\r\n\r\n\r\nexport const createField = (placeholder, name, validators, component, props, text) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Field component={component} name={name} placeholder={placeholder} validate={validators} {...props}/>\r\n\t\t\t{text}\r\n\t\t</div>\r\n\t)\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3nZoc\",\"dialog\":\"Dialogs_dialog__2-STB\",\"active\":\"Dialogs_active__1yXXD\"};","import React from 'react';\nimport styles from \"../Dialogs.module.scss\";\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = ({id, name}) =>{\n\t\treturn (\n\t\t\t<div key={id} className={styles.dialog + ' ' + styles.active}>\n\t\t\t\t<NavLink to={`/dialogs/${id}`}>{name}</NavLink>\n\t\t\t</div>\n\t\t)\n};\n\nexport default DialogItem;\n","import React from 'react';\nimport styles from \"../Dialogs.module.scss\";\n\nconst Message = ({message, id}) => {\n\treturn (\n\t\t<div key={id} className={styles.message}>\n\t\t\t{message}\n\t\t</div>\n\t)\n};\n\nexport default Message;\n","import React from 'react';\r\nimport styles from './Dialogs.module.scss';\r\nimport DialogItem from \"./DialogItem\";\r\nimport Message from \"./Message\";\r\nimport {Redirect} from \"react-router\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../common/FormControls/FormControls\";\r\n\r\nconst maxLength5 = maxLengthCreator(5);\r\n\r\nconst Dialogs = ({dialogsPage, sendMessage, isAuth}) => {\r\n\r\n\t\tlet dialogElements = dialogsPage.dialogs.map(el => <DialogItem key={el.id} name={el.name} id={el.id}/>);\r\n\t\tlet messageElements = dialogsPage.messages.map(el => <Message key={el.id} id={el.id} message={el.message}/>);\r\n\r\n\t\tif( !isAuth ) {\r\n\t\t\treturn <Redirect to='/login'/>;\r\n\t\t}\r\n\t\tlet addNewMessage = ({newMessageBody}) => {\r\n\t\t\tsendMessage(newMessageBody);\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div className={styles.dialogs}>\r\n\t\t\t\t<div className={styles.dialogsItems}>\r\n\t\t\t\t\t{dialogElements}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.messages}>\r\n\t\t\t\t\t<div>{messageElements}</div>\r\n\t\t\t\t\t<AddMessageFormRedux onSubmit={addNewMessage}/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n};\r\n\r\nconst AddMessageForm = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<div>\r\n\t\t\t\t<Field component={Textarea} name=\"newMessageBody\" placeholder=\"Enter your message\" validate={[required, maxLength5]}/>\r\n\t\t\t\t<button>Добавить сообщение</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n\tform: 'dialogAddMessageForm',\r\n\ttouchOnChange: true,\r\n\ttouchOnBlur: true\r\n})(AddMessageForm);\r\n\r\n\r\nexport default Dialogs;","import React, {Component} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsRedirect = (state) => {\r\n\treturn {\r\n\t\tisAuth: state.auth.isAuth\r\n\t}\r\n};\r\n\r\nexport const withAuthRedirect = (Wrapper) => {\r\n\tclass RedirectComponent extends Component {\r\n\t\trender(){\r\n\t\t\tif( !this.props.isAuth ) {\r\n\t\t\t\treturn <Redirect to='/login'/>\r\n\t\t\t}\r\n\t\t\treturn (\r\n\t\t\t\t<Wrapper {...this.props}/>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\treturn connect(mapStateToPropsRedirect)(RedirectComponent);\r\n};","import {sendMessageCreator} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdialogsPage: state.dialogsPage\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsendMessage: (message) => dispatch(sendMessageCreator(message))\r\n\t}\r\n};\r\n\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n\twithAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}