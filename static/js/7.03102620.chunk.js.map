{"version":3,"sources":["components/common/FormControls/FormControls.module.scss","utils/validators/validators.js","components/common/FormControls/FormControls.js","components/Login/LoginForm.js","components/Login/Login.js","components/Login/index.js"],"names":["module","exports","required","value","maxLengthCreator","max","length","FormControl","meta","touched","error","children","hasError","className","styles","formControl","Input","props","input","restProps","Textarea","createField","placeholder","name","validators","component","text","validate","reduxForm","form","touchOnChange","touchOnBlur","handleSubmit","onSubmit","type","errorMessage","Login","formData","login","this","isAuth","to","Component","connect","state","auth"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,aAAe,qC,iCCDrH,oEAAO,IAAMC,EAAW,SAACC,GACxB,IAAIA,EAGJ,MAAO,qBAGKC,EAAmB,SAACC,GAAD,OAAS,SAACF,GACzC,GAAIA,EAAMG,OAASD,EAClB,MAAM,cAAN,OAAqBA,EAArB,e,+LCLIE,EAAc,SAAC,GAAwC,IAAD,IAAtCC,KAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAQC,EAAc,EAAdA,SACvCC,EAAWH,GAAWC,EAC5B,OACC,yBAAKG,UAAWC,IAAOC,YAAc,KAAOH,EAAWE,IAAOJ,MAAQ,KACpEC,EAEAC,GAAa,8BAAOF,KAMXM,EAAQ,SAACC,GAAW,IACzBC,EAA6BD,EAA7BC,MAAgBC,GAAaF,EAAtBT,KADiB,YACKS,EADL,mBAE/B,OACC,kBAACV,EAAgBU,EAChB,2CAAWC,EAAWC,MAIZC,EAAW,SAACH,GAAW,IAC5BC,EAA6BD,EAA7BC,MAAgBC,GAAaF,EAAtBT,KADoB,YACES,EADF,mBAElC,OACC,kBAACV,EAAgBU,EAChB,8CAAcC,EAAWC,MAMfE,EAAc,SAACC,EAAaC,EAAMC,EAAYC,EAAWR,EAAOS,GAC5E,OACC,6BACC,kBAAC,IAAD,eAAOD,UAAWA,EAAWF,KAAMA,EAAMD,YAAaA,EAAaK,SAAUH,GAAgBP,IAC5FS,K,yIChBWE,cAAU,CACxBC,KAAM,YACNC,eAAe,EACfC,aAAa,GAHCH,EAhBG,SAAC,GAA2B,IAA1BI,EAAyB,EAAzBA,aAActB,EAAW,EAAXA,MACjC,OAAO,0BAAMuB,SAAUD,GACrBX,YAAY,QAAS,QAAS,CAACnB,KAAWc,KAC1CK,YAAY,WAAY,WAAY,CAACnB,KAAWc,IAAO,CAACkB,KAAM,aAC9Db,YAAY,KAAM,aAAc,GAAIL,IAAO,CAACkB,KAAM,YAAa,eAC/DxB,GACD,yBAAKG,UAAWC,IAAOqB,cACrBzB,GAGF,6BACC,4BAAQwB,KAAM,UAAd,c,uBCVGE,E,4MAELH,SAAW,SAACI,GACX,EAAKpB,MAAMqB,MAAMD,I,uDAIjB,OAAGE,KAAKtB,MAAMuB,OACN,kBAAC,IAAD,CAAUC,GAAE,aAGnB,6BACC,qCACA,kBAAC,EAAD,CAAWR,SAAUM,KAAKN,gB,GAbVS,aAuBLC,eALS,SAACC,GACxB,MAAO,CACNJ,OAAQI,EAAMC,KAAKL,UAGmB,CAACF,WAA1BK,CAAkCP,GC7BlCA","file":"static/js/7.03102620.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2MXBz\",\"error\":\"FormControls_error__3JOjQ\",\"errorMessage\":\"FormControls_errorMessage__f1ltz\"};","export const required = (value) => {\r\n\tif( value ) {\r\n\t\treturn undefined;\r\n\t}\r\n\treturn 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = (max) => (value) => {\r\n\tif( value.length > max) {\r\n\t\treturn `Max length ${max} symbols`;\r\n\t}\r\n\treturn undefined;\r\n};\r\n","import React from \"react\";\r\nimport styles from './FormControls.module.scss';\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({meta: {touched, error}, children}) => {\r\n\tconst hasError = touched && error;\r\n\treturn (\r\n\t\t<div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n\t\t\t{children}\r\n\t\t\t{\r\n\t\t\t\thasError && (<span>{error}</span>)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport const Input = (props) => {\r\n\tconst {input, meta, ...restProps} = props;\r\n\treturn (\r\n\t\t<FormControl {...props} >\r\n\t\t\t<input {...input} {...restProps}/>\r\n\t\t</FormControl>\r\n\t)\r\n};\r\nexport const Textarea = (props) => {\r\n\tconst {input, meta, ...restProps} = props;\r\n\treturn (\r\n\t\t<FormControl {...props} >\r\n\t\t\t<textarea {...input} {...restProps}/>\r\n\t\t</FormControl>\r\n\t)\r\n};\r\n\r\n\r\nexport const createField = (placeholder, name, validators, component, props, text) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Field component={component} name={name} placeholder={placeholder} validate={validators} {...props}/>\r\n\t\t\t{text}\r\n\t\t</div>\r\n\t)\r\n};","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {createField, Input} from \"../common/FormControls/FormControls\";\r\nimport styles from '../common/FormControls/FormControls.module.scss';\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n\treturn <form onSubmit={handleSubmit}>\r\n\t\t{createField(\"Email\", \"email\", [required], Input)}\r\n\t\t{createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n\t\t{createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"Remember Me\")}\r\n\t\t{error &&\r\n\t\t<div className={styles.errorMessage}>\r\n\t\t\t{error}\r\n\t\t</div>\r\n\t\t}\r\n\t\t<div>\r\n\t\t\t<button type={\"submit\"}>Login</button>\r\n\t\t</div>\r\n\t</form>;\r\n};\r\n\r\nexport default reduxForm({\r\n\tform: 'LoginForm',\r\n\ttouchOnChange: true,\r\n\ttouchOnBlur: true\r\n})(LoginForm);","import React, {Component} from 'react';\r\nimport LoginForm from \"./LoginForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {Redirect} from \"react-router\";\r\n\r\n\r\nclass Login extends Component {\r\n\r\n\tonSubmit = (formData) => {\r\n\t\tthis.props.login(formData);\r\n\t};\r\n\r\n\trender() {\r\n\t\tif(this.props.isAuth ) {\r\n\t\t\treturn <Redirect to={`/profile`}/>\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>Login</h1>\r\n\t\t\t\t<LoginForm onSubmit={this.onSubmit}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tisAuth: state.auth.isAuth\r\n\t}\r\n}\r\nexport default connect(mapStateToProps, {login})(Login);","import Login from \"./Login\";\r\nexport default Login;"],"sourceRoot":""}